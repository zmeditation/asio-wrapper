
包括了容器相关的类和方法等。

类：

list：
boost::container::list的别名，只是省略了第二个参数，

dummy_lockable：
实现了lock()和unlock()接口，但什么也不做。

lockable：
实现了lock()和unlock()接口，分别对std::shared_mutex执行加锁和解锁操作。

template<typename T, typename Container, typename Lockable>
class queue : public Container, public Lockable
一个队列基类，可选择容器（list和deque，或者是有相同接口的定义容器）和锁类型（dummy_lockable和lockable，或者是有相同接口的定义锁）。
如果你想用自己的容器，那么这个容器必须提供必要的接口，具体需要哪些接口，我的建议是，先用上你的容器，然后由编译器告诉你缺少什么接口，
接口需要做的工作从名字便知（比如push_back，pop_front等）。

template<typename T, typename Container> using non_lock_queue = queue<T, Container, dummy_lockable>;
无锁不安全队列（在某些特定的业务逻辑下，队列无需加锁，由业务保证其线程安全性，比如绝对的一应一答式逻辑）。

template<typename T, typename Container> using lock_queue = queue<T, Container, lockable>;
有锁安全队列。
